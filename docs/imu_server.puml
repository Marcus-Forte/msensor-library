@startuml IMU Server


package "Sensor Server" {

    class AppPublisher<<App>> {
    }

    struct IMUData<<type>> {
        +float ax
        +float ay
        +float az
        +float gx
        +float gy
        +float gz
    }

    interface IIMU<<Interface>>  {
        +getIMUData(): IMUData
    }

    class ICM20948<<Driver>> {
        +getIMUData(): IMUData
    }

    class gRPCServer {
        +publishIMU(IMUData)
        ---
        +getImu(IMUData)
        ---
        -queue<IMUData>
    }


    IMUData - IIMU: implements
    AppPublisher ..> gRPCServer: publish to
    AppPublisher ..> ICM20948: gets data from

    IIMU <|.. ICM20948
}

interface ProtoDefinitions<<proto>> {
    +getImu(): IMUData
}

package "Sensor Client" {
    class gRPCClient {
        +getImu(): IMUData
    }
}


gRPCClient <--> gRPCServer: RPC

gRPCServer ..> ProtoDefinitions: implements
gRPCClient ..> ProtoDefinitions: implements

@enduml