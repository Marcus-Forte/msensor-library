@startuml Lidar Server
' allow_mixing

struct Point3DI {
    +x: float
    +y: float
    +z: float
    +intensity: int
}
struct Scan3D {
    +points: vector<Point3DI>
    +timestamp: long
}

Point3DI - Scan3D

node "RaspberryPi\n<img:rpi.png{scale=0.1}>" as RaspberryPi {
    skinparam node {
        BackgroundColor #FFCCCC
    }

    Scan3D <-- "use" ILiDAR
    interface ILiDAR {
        +getScan(): Scan3D
    }
    class Mid360 {
        +getScan(): Scan3D
    }

    ILiDAR <|.. Mid360

    gRPCPublisher -> "use" ILiDAR

    class "gRPC Publisher" as gRPCPublisher {
        +getScan(): Scan3D
    }

    class "gRPC Service" as gRPCService {
        +getScan(): Scan3D
    }


    gRPCService <|-- gRPCPublisher

    ' grpc publisher uses Scan3d
    ' Scan3D <- gRPCPublisher

    note right of gRPCPublisher
        from perspective of the server,
        this is actually a "publishScan(scan: Scan3D)"!
    end note

    Point3DI -[hidden]-> ILiDAR
    Scan3D -[hidden]-> ILiDAR


}

node "EdgeGPU\n<img:gpu.jpg{scale=0.1}>"  as RemoteClient {
    class "gRPC Client" as gRPCClient {
        +getScan(): Scan3D
    }

    component "Fancy CV Algorithm" as CV {

    }
    
    gRPCClient -> "use" CV
}

gRPCClient -0- "gRPC" gRPCPublisher



artifact "Types\n<img:types.png{scale=0.1}>" as Types {
}

artifact "Services\n<img:services.png{scale=0.2}>" as Services {
}

Services <|.. "generated by" gRPCService
Services <|.. "generated by" gRPCClient
@enduml